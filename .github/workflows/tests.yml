name: Tests

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: write

jobs:
  build:
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11", "3.12", "3.13"]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        pip install poetry
        poetry install
        echo "$(poetry env info --path)/bin" >> $GITHUB_PATH
    - name: Test with pytest
      if: matrix.python-version != '3.13'
      env:
        LLM_API_KEY: ${{ secrets.LLM_API_KEY }}
        LLM_API_TYPE: openai
        MODEL: "gpt-4.1"
      run: |
        pytest
    - name: Test with pytest +coverage
      if: matrix.python-version == '3.13'
      env:
        LLM_API_KEY: ${{ secrets.LLM_API_KEY }}
        LLM_API_TYPE: openai
        MODEL: "gpt-4.1"
      run: |
        pytest --cov=gito --cov-report=xml
    - name: Generate coverage badge
      if: matrix.python-version == '3.13'  # Run badge generation only once
      uses: tj-actions/coverage-badge-py@v2
      with:
        output: 'coverage.svg'
    - name: Commit coverage badge
      if: matrix.python-version == '3.13'  # Commit only once
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git fetch origin
        git checkout ${{ github.head_ref || github.ref_name }} --
        git add coverage.svg
        git commit -m "Update coverage badge [skip ci]" || echo "No changes to commit"
        git push
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
